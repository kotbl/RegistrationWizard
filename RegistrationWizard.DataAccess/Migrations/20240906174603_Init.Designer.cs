// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RegistrationWizard.DataAccess;

#nullable disable

namespace RegistrationWizard.DataAccess.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240906174603_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RegistrationWizard.Domain.Models.CountryModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("CreateDt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("SYSDATETIMEOFFSET()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("UpdateDt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("SYSDATETIMEOFFSET()");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDt = new DateTimeOffset(new DateTime(2024, 9, 6, 17, 46, 3, 552, DateTimeKind.Unspecified).AddTicks(1099), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Country 1",
                            UpdateDt = new DateTimeOffset(new DateTime(2024, 9, 6, 17, 46, 3, 552, DateTimeKind.Unspecified).AddTicks(1100), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 2,
                            CreateDt = new DateTimeOffset(new DateTime(2024, 9, 6, 17, 46, 3, 552, DateTimeKind.Unspecified).AddTicks(1108), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Country 2",
                            UpdateDt = new DateTimeOffset(new DateTime(2024, 9, 6, 17, 46, 3, 552, DateTimeKind.Unspecified).AddTicks(1108), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 3,
                            CreateDt = new DateTimeOffset(new DateTime(2024, 9, 6, 17, 46, 3, 552, DateTimeKind.Unspecified).AddTicks(1136), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Country 3",
                            UpdateDt = new DateTimeOffset(new DateTime(2024, 9, 6, 17, 46, 3, 552, DateTimeKind.Unspecified).AddTicks(1136), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 4,
                            CreateDt = new DateTimeOffset(new DateTime(2024, 9, 6, 17, 46, 3, 552, DateTimeKind.Unspecified).AddTicks(1141), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Country 4",
                            UpdateDt = new DateTimeOffset(new DateTime(2024, 9, 6, 17, 46, 3, 552, DateTimeKind.Unspecified).AddTicks(1142), new TimeSpan(0, 0, 0, 0, 0))
                        });
                });

            modelBuilder.Entity("RegistrationWizard.Domain.Models.ProvinceModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("CreateDt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("SYSDATETIMEOFFSET()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("UpdateDt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("SYSDATETIMEOFFSET()");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Provinces");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryId = 1,
                            CreateDt = new DateTimeOffset(new DateTime(2024, 9, 6, 17, 46, 3, 552, DateTimeKind.Unspecified).AddTicks(1103), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Province 2",
                            UpdateDt = new DateTimeOffset(new DateTime(2024, 9, 6, 17, 46, 3, 552, DateTimeKind.Unspecified).AddTicks(1103), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 2,
                            CountryId = 1,
                            CreateDt = new DateTimeOffset(new DateTime(2024, 9, 6, 17, 46, 3, 552, DateTimeKind.Unspecified).AddTicks(1104), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Province 3",
                            UpdateDt = new DateTimeOffset(new DateTime(2024, 9, 6, 17, 46, 3, 552, DateTimeKind.Unspecified).AddTicks(1105), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 3,
                            CountryId = 1,
                            CreateDt = new DateTimeOffset(new DateTime(2024, 9, 6, 17, 46, 3, 552, DateTimeKind.Unspecified).AddTicks(1106), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Province 4",
                            UpdateDt = new DateTimeOffset(new DateTime(2024, 9, 6, 17, 46, 3, 552, DateTimeKind.Unspecified).AddTicks(1106), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 4,
                            CountryId = 1,
                            CreateDt = new DateTimeOffset(new DateTime(2024, 9, 6, 17, 46, 3, 552, DateTimeKind.Unspecified).AddTicks(1107), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Province 5",
                            UpdateDt = new DateTimeOffset(new DateTime(2024, 9, 6, 17, 46, 3, 552, DateTimeKind.Unspecified).AddTicks(1107), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 5,
                            CountryId = 2,
                            CreateDt = new DateTimeOffset(new DateTime(2024, 9, 6, 17, 46, 3, 552, DateTimeKind.Unspecified).AddTicks(1109), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Province 6",
                            UpdateDt = new DateTimeOffset(new DateTime(2024, 9, 6, 17, 46, 3, 552, DateTimeKind.Unspecified).AddTicks(1109), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 6,
                            CountryId = 2,
                            CreateDt = new DateTimeOffset(new DateTime(2024, 9, 6, 17, 46, 3, 552, DateTimeKind.Unspecified).AddTicks(1111), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Province 7",
                            UpdateDt = new DateTimeOffset(new DateTime(2024, 9, 6, 17, 46, 3, 552, DateTimeKind.Unspecified).AddTicks(1111), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 7,
                            CountryId = 2,
                            CreateDt = new DateTimeOffset(new DateTime(2024, 9, 6, 17, 46, 3, 552, DateTimeKind.Unspecified).AddTicks(1112), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Province 8",
                            UpdateDt = new DateTimeOffset(new DateTime(2024, 9, 6, 17, 46, 3, 552, DateTimeKind.Unspecified).AddTicks(1113), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 8,
                            CountryId = 2,
                            CreateDt = new DateTimeOffset(new DateTime(2024, 9, 6, 17, 46, 3, 552, DateTimeKind.Unspecified).AddTicks(1134), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Province 9",
                            UpdateDt = new DateTimeOffset(new DateTime(2024, 9, 6, 17, 46, 3, 552, DateTimeKind.Unspecified).AddTicks(1135), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 9,
                            CountryId = 3,
                            CreateDt = new DateTimeOffset(new DateTime(2024, 9, 6, 17, 46, 3, 552, DateTimeKind.Unspecified).AddTicks(1137), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Province 10",
                            UpdateDt = new DateTimeOffset(new DateTime(2024, 9, 6, 17, 46, 3, 552, DateTimeKind.Unspecified).AddTicks(1137), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 10,
                            CountryId = 3,
                            CreateDt = new DateTimeOffset(new DateTime(2024, 9, 6, 17, 46, 3, 552, DateTimeKind.Unspecified).AddTicks(1139), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Province 11",
                            UpdateDt = new DateTimeOffset(new DateTime(2024, 9, 6, 17, 46, 3, 552, DateTimeKind.Unspecified).AddTicks(1139), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 11,
                            CountryId = 3,
                            CreateDt = new DateTimeOffset(new DateTime(2024, 9, 6, 17, 46, 3, 552, DateTimeKind.Unspecified).AddTicks(1140), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Province 12",
                            UpdateDt = new DateTimeOffset(new DateTime(2024, 9, 6, 17, 46, 3, 552, DateTimeKind.Unspecified).AddTicks(1140), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 12,
                            CountryId = 3,
                            CreateDt = new DateTimeOffset(new DateTime(2024, 9, 6, 17, 46, 3, 552, DateTimeKind.Unspecified).AddTicks(1140), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Province 13",
                            UpdateDt = new DateTimeOffset(new DateTime(2024, 9, 6, 17, 46, 3, 552, DateTimeKind.Unspecified).AddTicks(1141), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 13,
                            CountryId = 4,
                            CreateDt = new DateTimeOffset(new DateTime(2024, 9, 6, 17, 46, 3, 552, DateTimeKind.Unspecified).AddTicks(1142), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Province 14",
                            UpdateDt = new DateTimeOffset(new DateTime(2024, 9, 6, 17, 46, 3, 552, DateTimeKind.Unspecified).AddTicks(1142), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 14,
                            CountryId = 4,
                            CreateDt = new DateTimeOffset(new DateTime(2024, 9, 6, 17, 46, 3, 552, DateTimeKind.Unspecified).AddTicks(1143), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Province 15",
                            UpdateDt = new DateTimeOffset(new DateTime(2024, 9, 6, 17, 46, 3, 552, DateTimeKind.Unspecified).AddTicks(1143), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 15,
                            CountryId = 4,
                            CreateDt = new DateTimeOffset(new DateTime(2024, 9, 6, 17, 46, 3, 552, DateTimeKind.Unspecified).AddTicks(1144), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Province 16",
                            UpdateDt = new DateTimeOffset(new DateTime(2024, 9, 6, 17, 46, 3, 552, DateTimeKind.Unspecified).AddTicks(1144), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 16,
                            CountryId = 4,
                            CreateDt = new DateTimeOffset(new DateTime(2024, 9, 6, 17, 46, 3, 552, DateTimeKind.Unspecified).AddTicks(1144), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Province 17",
                            UpdateDt = new DateTimeOffset(new DateTime(2024, 9, 6, 17, 46, 3, 552, DateTimeKind.Unspecified).AddTicks(1145), new TimeSpan(0, 0, 0, 0, 0))
                        });
                });

            modelBuilder.Entity("RegistrationWizard.Domain.Models.UserModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("CreateDt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("SYSDATETIMEOFFSET()");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProvinceId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("UpdateDt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("SYSDATETIMEOFFSET()");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("ProvinceId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("RegistrationWizard.Domain.Models.ProvinceModel", b =>
                {
                    b.HasOne("RegistrationWizard.Domain.Models.CountryModel", "Country")
                        .WithMany("Provinces")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("RegistrationWizard.Domain.Models.UserModel", b =>
                {
                    b.HasOne("RegistrationWizard.Domain.Models.CountryModel", "Country")
                        .WithMany("Users")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("RegistrationWizard.Domain.Models.ProvinceModel", "Province")
                        .WithMany("Users")
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Country");

                    b.Navigation("Province");
                });

            modelBuilder.Entity("RegistrationWizard.Domain.Models.CountryModel", b =>
                {
                    b.Navigation("Provinces");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("RegistrationWizard.Domain.Models.ProvinceModel", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
